An incomplete list of things that could be done with tetuhi


General improvements 

* Documentation. any would be good.

* Make a real config file (that vg/config.py parses) 

* Tests (including reviving obsolete ones)

* Build system, packaging (./configure, python setup.py .deb, etc)
 

Image handling

* Experiment with other blobfinders (which would involve stabilising the 
  API)

* Better clustering.

* Better animation.


Speed improvements (which also lead to better games)

* Vectorise scanning.

* Scan for vision in lower resolution (but collisions in hi-res).

* Quicker start up (pyYAML is the slowest thing)

* Look for speed ups in finding blobs.


OLPC changes:

* Generated sounds (csound, or python)

* Sugarising

* Adapt for smaller camera, screen

* shrink neural nets, decision grid (for speed)

* Try to reduce memory, especially worst case memory.


Gameplay:

* Turn neural net training on (actions better tuned to environment)

* More game types (platform, scrolling would be easy to start with).

* More species (defined in config/rules.yaml)

* Augment networks with delayed/damped inputs.

* Multiplayer?

* Share characters between games.

* Game can get harder as it progresses (training in the background)

* Better tests of what makes a good game (try to track agents
  experience/ anxiety)

* By default, automatically adjust for number of CPUs


Misc:

* more sophisticated attract loop.

